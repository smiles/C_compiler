A.
	- assembly language(ASM) = Any low-level programming language in which there is a correspondence between the code and the machine code instructions. Assembly code is converted to executable machine code by a utility program called "assembler".
	- assembler = Creates "object code" by translating a combination of mnemonics and syntax for operations and addressing modes into their numerical equivalents. This representation typically includes an operation code (opcode) as well as other control bits and data. 
---------------------------------------------------------------------------------------------
B.
	- bytecodes(portable code, p-code) = A instruction set designed to be efficiently executed by a interpreter.
---------------------------------------------------------------------------------------------
C.
	- compiler = Is a program that can translate one programming language to another programming language.
---------------------------------------------------------------------------------------------
D.
---------------------------------------------------------------------------------------------
E.
---------------------------------------------------------------------------------------------
F.
---------------------------------------------------------------------------------------------
G.
---------------------------------------------------------------------------------------------
H.
---------------------------------------------------------------------------------------------
I. 
	- interpreter = Is a program that directly executes instructions from a programming language without the need for compiling.
---------------------------------------------------------------------------------------------
J.
	- just-in-time(JIT) = Compiles code at run time then executes. 
---------------------------------------------------------------------------------------------
K.
---------------------------------------------------------------------------------------------
L.
---------------------------------------------------------------------------------------------
M.
---------------------------------------------------------------------------------------------
N.
---------------------------------------------------------------------------------------------
P.
	- preprocessor = Takes in input to produce output used in another program.
---------------------------------------------------------------------------------------------
Q.
---------------------------------------------------------------------------------------------
R.
---------------------------------------------------------------------------------------------
S.
---------------------------------------------------------------------------------------------
T.
---------------------------------------------------------------------------------------------
U.
---------------------------------------------------------------------------------------------
V.
---------------------------------------------------------------------------------------------
W.
---------------------------------------------------------------------------------------------
X.
---------------------------------------------------------------------------------------------
Y.
---------------------------------------------------------------------------------------------
Z.
---------------------------------------------------------------------------------------------
